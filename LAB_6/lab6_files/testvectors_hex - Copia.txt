//AluOp|  A[31:0]   |   B[31:0]   | Result[31:0]
0_______00_00_00_00___00_00_00_00___00_00_00_00    # Output zero
0_______00_00_00_01___00_00_00_00___00_00_00_01
0_______00_00_00_01___FF_FF_FF_FF___00_00_00_00
2_______00_00_00_00___00_00_00_01___FF_FF_FF_FE    # Sum of A+(~B)
4_______01_23_45_67___89_AB_CD_EF___01_23_45_67    # AND: left side
5_______01_23_45_67___89_AB_CD_EF___89_AB_CD_EF    # OR: right side
6_______01_23_45_67___89_AB_CD_EF___88_88_88_88
7_______00_00_00_00___F0_A5_E1_87___76_54_32_10    # XOR: inverted AND
A_______00_00_01_00___FF_FF_FF_EF___00_00_00_00    # A+B = 1000000EF = 10_0000000000000000000000011101111 34 bits => TOO MANY
A_______00_00_01_00___00_00_10_00___00_00_00_00    # A+B = 00001100 = 1000100000000 14 bits => *NOT* TOO MANY
A_______00_00_01_00___00_00_01_00___00_00_00_00    # A+B = 00000200 = 1000000000 11 bits => *NOT* TOO MANY
A_______00_00_01_FF___00_00_01_00___00_00_00_00    # A+B = 000002FF = 1011111111 11 bits => *NOT* TOO MANY


